#Rowland Sanders - CECS 378

#stored addresses in SAVED.GAM
#Variable Declaration
maxB = chr(99)

maxByte = 231
maxByte2 = 3

maxTwoByte1 = 15
maxTwoByte2 = 39

save = "SAVED.GAM"

#Methods
#Takes in files, the offset used, and the value of used stat. Then opens file and writes to said object.
def changeStat(file, offset, stat):
    file.seek(offset, 0)
    file.write(str(stat).encode())

#Takes in the same as the fil above instead using a size of 2 bytes. The value is editted using little Endian.
def changeStat2(file, offset1, offset2, stat1, stat2):
    file.seek(offset1, 0)
    file.write(bytes([stat1]))
    file.seek(offset2, 0)
    file.write(bytes([stat2]))

#This method is used to update the current stat. This also uses a 2 byte size.
def find99stat(file, offset):
    avUpdatedStat = chr(99)
    changeStat(file, offset, avUpdatedStat)

#This does the same thing as the method above. This is editted using little Endian.
def find9999stat(file, offset1, offset2):
    a = format(9999, "#04x")
    hexUpdatedStat = int(a, 16)
    b = hexUpdatedStat.to_bytes(2, 'little')
    changeStat2(file, offset1, offset2, b[0], b[1])

#This method is used to update the values decided on by the user for the changable stats.
def editValues(file, offset):
    choice = input("Yes or No?: ")
    if (choice == "Y" or choice == "y"):
      UpdatedStat = int(input("Enter value from 0 to 999: "))
      avUpdatedStat = chr(UpdatedStat)
      changeStat(file, offset, avUpdatedStat)

#Main Method
def main():

    #this sets the variable file to SAVED.GAM, then allows for reading and writing to this file
    file = open(save, "rb+")
    #loop for menu choices
    while (True):
        print("\n     -----------------------------"
        "\n     Game File Editor for Ultima V"
        "\n     -----------------------------")
        #MAIN MENU OPTIONS / BROKE UP INTO 2
        print(" \nMAIN OPTIONS"
              " \n-----------------------------"
              " \n1 - Change Main Character stats"
              " \n2 - Change Party Stats"
              " \n3 - Max all Character stats\n"
              " \n\nALTERNATIVE OPTIONS"
              " \n-----------------------------"
              " \n4 - Edit values for inventory additions"
              " \n5 - Add 100 Keys in your inventory"
              " \n6 - Add 100 Skull KEYS in your inventory"
              " \n7 - Add 100 Gems in your inventory"
              " \n8 - Add 1 Black badge in your inventory"
              " \n9 - Add 2 Magic Carpets in your inventory"
              " \n10 - Add 10 Magic Axes in your inventory"
              " \n11 - Enter Updated address of SAVED.GAM file")

        print("\nType 'Q' or 'q' at anytime to quit program\n")

        userChoice = input("Enter a number from the selection:: ")

#MENU CHOICE 1
        if (userChoice == "1"):
            print("\nPlease reply 'y' or 'n' to the following\n")
            #ASKES USER IF THEY WANT TO CHANGE IT THEN CHANGES IT USING THE METHOD APPROPRIATE 
            choice = input("Change Strength stat to 99? ")
            if (choice == "Y" or choice == "y"):
              avStrength = chr(99)
              changeStat(file, 14, avStrength)

            choice = input("Change Dexterity stat to 99? ")
            if (choice == "Y" or choice == "y"):
              avDexterity = chr(99)
              changeStat(file, 15, avDexterity)

            choice = input("Change Intelligence stat to 99? ")
            if (choice == "Y" or choice == "y"):
              avIntelligence = chr(99)
              changeStat(file, 16, avIntelligence)

            choice == input("Change Health stat to 999? ")
            if (choice == "Y" or choice == "y"):
                a = format(999, "#04x")
                hexHealth = int(a, 16)
                b = hexHealth.to_bytes(2, 'little')
                changeStat2(file, 18, 19, b[0], b[1])

            choice == input("Change Max HP stat to 999? ")
            if (choice == "Y" or choice == "y"):
                x = format(999, "#04x")
                hexMaxHP = int(x, 16)
                y = hexMaxHP.to_bytes(2, 'little')
                changeStat2(file, 20, 21, y[0], y[1])

            choice == input("Change Experience stat to 9999? ")
            if (choice == "Y" or choice == "y"):
                x = format(9999, "#04x")
                hexExperience = int(x, 16)
                y = hexExperience.to_bytes(2, 'little')
                changeStat2(file, 22, 23, y[0], y[1])

            choice == input("Change amount of Gold to 9999? ")
            if (choice == "Y" or choice == "y"):
                x = format(9999, "#04x")
                hexGold = int(x, 16)
                y = hexGold.to_bytes(2, 'little')
                changeStat2(file, 516, 517, y[0], y[1])

            print("\nStats of Main Character have been updated!!!\n")
            
#MENU CHOICE 2
        elif (userChoice == "2"):

            # Keep looping until the user decides to quit
            while (True):

                # Output a simple menu to the user
                print(" \nChoose from one of the characters below"
                      " \n-----------------------------"
                      " \n1 - Total Party Gold"
                      " \n2 - Shamino"
                      " \n3 - Iolo"
                      " \n4 - Mariah"
                      " \n5 - Geoffrey"
                      " \n6 - Jaana"
                      " \n7 - Julia"
                      " \n8 - Dupre"
                      " \n9 - Katrina"
                      " \n10 - Sentri"
                      "\n11 - Gwenno"
                      "\n12 - Johne"
                      "\n13 - Gorn"
                      "\n14 - Maxwell"
                      "\n15 - Toshi"
                      "\n16 - Saduj")

                print("\nType 'Q' or 'q' at anytime to quit back to main menu\n")
                userChoice = input("Enter a number from the selection:: ")

#THIS ALLOWS THE USER TO CHOOSE WHICH THEY WANT TO CHANGE AND SETS IT TO DESIRED AMOUNT
#PARTY GOLD
                if (userChoice == "1"):
                    gold = int(input("What gold value would you like(Max 9999)? "))
                    a = format(gold, "#04x")
                    hexGold = int(a, 16)
                    b = hexGold.to_bytes(2, 'little')
                    changeStat2(file, 516, 517, b[0], b[1])
#PLAYER SHAIMO
                elif (userChoice == "2"):
                    find99stat(file, 0x002E)
                    find99stat(file, 0x002F)
                    find99stat(file, 0x0030)
                    find9999stat(file, 0x0032, 0x0033)
                    find9999stat(file, 0x0034, 0x0035)
                    find9999stat(file, 0x0036, 0x0037)
                    print("\nAll of Shamio's Stats are set to desired value (99/9999) being default!!!")
#PLAYER IOLO
                elif (userChoice == "3"):
                    find99stat(file, 0x004E)
                    find99stat(file, 0x004F)
                    find99stat(file, 0x0050)
                    find9999stat(file, 0x0052, 0x0053)
                    find9999stat(file, 0x0054, 0x0055)
                    find9999stat(file, 0x0056, 0x0057)
                    print("\nAll of Iolo's Stats are set to desired value (99/9999) being default!!!")

#PLAYER MARIAH
                elif (userChoice == "4"):
                    find99stat(file, 0x006E)
                    find99stat(file, 0x006F)
                    find99stat(file, 0x0070)
                    find9999stat(file, 0x0072, 0x0073)
                    find9999stat(file, 0x0074, 0x0075)
                    find9999stat(file, 0x0076, 0x0077)
                    print("\nAll of Mariah's Stats are set to desired value (99/9999) being default!!!")

#PLAYER GEOFFREY
                elif (userChoice == "5"):
                    find99stat(file, 0x008E)
                    find99stat(file, 0x008F)
                    find99stat(file, 0x0090)
                    find9999stat(file, 0x0092, 0x0093)
                    find9999stat(file, 0x0094, 0x0095)
                    find9999stat(file, 0x0096, 0x0097)
                    print("\nAll of Geoffrey's Stats are set to desired value (99/9999) being default!!!")

#PLAYER JAANA
                elif (userChoice == "6"):
                    find99stat(file, 0x00AE)
                    find99stat(file, 0x00AF)
                    find99stat(file, 0x00B0)
                    find9999stat(file, 0x00B2, 0x00B3)
                    find9999stat(file, 0x00B4, 0x00B5)
                    find9999stat(file, 0x00B6, 0x00B7)
                    print("\nAll of Jaana's Stats are set to desired value (99/9999) being default!!!")

#PLAYER JULIA
                elif (userChoice == "7"):
                    find99stat(file, 0x00CE)
                    find99stat(file, 0x00CF)
                    find99stat(file, 0x00D0)
                    find9999stat(file, 0x00D2, 0x00D3)
                    find9999stat(file, 0x00D4, 0x00D5)
                    find9999stat(file, 0x00D6, 0x00D7)
                    print("\nAll of Julia's Stats are set to desired value (99/9999) being default!!!")

#PLAYER DUPRE
                elif (userChoice == "8"):
                    find99stat(file, 0x00EE)
                    find99stat(file, 0x00EF)
                    find99stat(file, 0x00F0)
                    find9999stat(file, 0x00F2, 0x00F3)
                    find9999stat(file, 0x00F4, 0x00F5)
                    find9999stat(file, 0x00F6, 0x00F7)
                    print("\nAll of Dupre's Stats are set to desired value (99/9999) being default!!!")

#PLAYER KATRINA
                elif (userChoice == "9"):
                    find99stat(file, 0x010E)
                    find99stat(file, 0x010F)
                    find99stat(file, 0x0110)
                    find9999stat(file, 0x0112, 0x0113)
                    find9999stat(file, 0x0114, 0x0115)
                    find9999stat(file, 0x0116, 0x0117)
                    print("\nAll of Katrina's Stats are set to desired value (99/9999) being default!!!")

#PLAYER SENTRI
                elif (userChoice == "10"):
                    find99stat(file, 0x012E)
                    find99stat(file, 0x012F)
                    find99stat(file, 0x0130)
                    find9999stat(file, 0x0132, 0x0133)
                    find9999stat(file, 0x0134, 0x0135)
                    find9999stat(file, 0x0136, 0x0137)
                    print("\nAll of Sentri's Stats are set to desired value (99/9999) being default!!!")

#PLAYER GWENNO
                elif (userChoice == "11"):
                    find99stat(file, 0x014E)
                    find99stat(file, 0x014F)
                    find99stat(file, 0x0150)
                    find9999stat(file, 0x0152, 0x0153)
                    find9999stat(file, 0x0154, 0x0155)
                    find9999stat(file, 0x0156, 0x0157)
                    print("\nAll of Gwenno's Stats are set to desired value (99/9999) being default!!!")

#PLAYER JOHN
                elif (userChoice == "12"):
                    find99stat(file, 0x016E)
                    find99stat(file, 0x016F)
                    find99stat(file, 0x0170)
                    find9999stat(file, 0x0172, 0x0173)
                    find9999stat(file, 0x0174, 0x0175)
                    find9999stat(file, 0x0176, 0x0177)
                    print("\nAll of John's Stats are set to desired value (99/9999) being default!!!")

#PLAYER JOHN
                elif (userChoice == "13"):
                    find99stat(file, 0x018E)
                    find99stat(file, 0x018F)
                    find99stat(file, 0x0190)
                    find9999stat(file, 0x0192, 0x0193)
                    find9999stat(file, 0x0194, 0x0195)
                    find9999stat(file, 0x0196, 0x0197)
                    print("\nAll of Gorn's Stats are set to desired value (99/9999) being default!!!")

#PLAYER MAXWELL
                elif (userChoice == "14"):
                    find99stat(file, 0x01AE)
                    find99stat(file, 0x01AF)
                    find99stat(file, 0x01B0)
                    find9999stat(file, 0x01B2, 0x01B3)
                    find9999stat(file, 0x01B4, 0x01B5)
                    find9999stat(file, 0x01B6, 0x01B7)
                    print("\nAll of Maxwell's Stats are set to desired value (99/9999) being default!!!")

#PLAYER TOSHI
                elif (userChoice == "15"):
                    find99stat(file, 0x01CE)
                    find99stat(file, 0x01CF)
                    find99stat(file, 0x01D0)
                    find9999stat(file, 0x01D2, 0x01D3)
                    find9999stat(file, 0x01D4, 0x01D5)
                    find9999stat(file, 0x01D6, 0x01D7)
                    print("\nAll of Toshi's Stats are set to desired value (99/9999) being default!!!")

#PLAYER SADUJ
                elif (userChoice == "16"):
                    find99stat(file, 0x01EE)
                    find99stat(file, 0x01EF)
                    find99stat(file, 0x01F0)
                    find9999stat(file, 0x01F2, 0x01F3)
                    find9999stat(file, 0x01F4, 0x01F5)
                    find9999stat(file, 0x01F6, 0x01F7)
                    print("\nAll of Saduj's Stats are set to desired value (99/9999) being default!!!")
                else:
                    print("Stats updated!!!\n")
                    break
#MENU CHOICE 3
        elif (userChoice == "3"):
            #THIS IS A COMBO OF ALL THE STATS BEING SET TO MAX
            #MAIN USER
            changeStat(file, 0x000E, maxB)
            changeStat(file, 0x000F, maxB)
            changeStat(file, 0x0010, maxB)
            changeStat2(file, 0x0012, 0x0013, maxByte, maxByte2)
            changeStat2(file, 0x0014, 0x0015, maxByte, maxByte2)
            changeStat2(file, 0x0016, 0x0017, maxTwoByte1, maxTwoByte2)
            #GOLD AMOUNT
            changeStat2(file, 0x0204, 0x0205, maxTwoByte1, maxTwoByte2)
            #SHAMINO
            changeStat(file, 0x002E, maxB)
            changeStat(file, 0x002F, maxB)
            changeStat(file, 0x0030, maxB)
            changeStat2(file, 0x0032, 0x0033, maxByte, maxByte2)
            changeStat2(file, 0x0034, 0x0035, maxByte, maxByte2)
            changeStat2(file, 0x0036, 0x0037, maxTwoByte1, maxTwoByte2)
            #IOLO
            changeStat(file, 0x004E, maxB)
            changeStat(file, 0x004F, maxB)
            changeStat(file, 0x0050, maxB)
            changeStat2(file, 0x0052, 0x0053, maxByte, maxByte2)
            changeStat2(file, 0x0054, 0x0055, maxByte, maxByte2)
            changeStat2(file, 0x0056, 0x0057, maxTwoByte1, maxTwoByte2)
            #MARIAH
            changeStat(file, 0x006E, maxB)
            changeStat(file, 0x006F, maxB)
            changeStat(file, 0x0070, maxB)
            changeStat2(file, 0x0072, 0x0073, maxByte, maxByte2)
            changeStat2(file, 0x0074, 0x0075, maxByte, maxByte2)
            changeStat2(file, 0x0076, 0x0077, maxTwoByte1, maxTwoByte2)
            #GEOFFREY
            changeStat(file, 0x008, maxB)
            changeStat(file, 0x008F, maxB)
            changeStat(file, 0x0090, maxB)
            changeStat2(file, 0x0092, 0x0093, maxByte, maxByte2)
            changeStat2(file, 0x0094, 0x0095, maxByte, maxByte2)
            changeStat2(file, 0x0096, 0x0097, maxTwoByte1, maxTwoByte2)
            #JAANA
            changeStat(file, 0x00AE, maxB)
            changeStat(file, 0x00AF, maxB)
            changeStat(file, 0x00B0, maxB)
            changeStat2(file, 0x00B2, 0x00B3, maxByte, maxByte2)
            changeStat2(file, 0x00B4, 0x00B5, maxByte, maxByte2)
            changeStat2(file, 0x00B6, 0x00B7, maxTwoByte1, maxTwoByte2)
            #JULIA
            changeStat(file, 0x00CE, maxB)
            changeStat(file, 0x00CF, maxB)
            changeStat(file, 0x00D0, maxB)
            changeStat2(file, 0x00D2, 0x00D3, maxByte, maxByte2)
            changeStat2(file, 0x00D4, 0x00D5, maxByte, maxByte2)
            changeStat2(file, 0x00D6, 0x00D7, maxTwoByte1, maxTwoByte2)
            #DUPRE
            changeStat(file, 0x00EE, maxB)
            changeStat(file, 0x00EF, maxB)
            changeStat(file, 0x00F0, maxB)
            changeStat2(file, 0x00F2, 0x00F3, maxByte, maxByte2)
            changeStat2(file, 0x00F4, 0x00F5, maxByte, maxByte2)
            changeStat2(file, 0x00F6, 0x00F7, maxTwoByte1, maxTwoByte2)
            #KATRINA
            changeStat(file, 0x010E, maxB)
            changeStat(file, 0x010F, maxB)
            changeStat(file, 0x0110, maxB)
            changeStat2(file, 0x0112, 0x0113, maxByte, maxByte2)
            changeStat2(file, 0x0114, 0x0115, maxByte, maxByte2)
            changeStat2(file, 0x0116, 0x0117, maxTwoByte1, maxTwoByte2)
            #SENTRI
            changeStat(file, 0x012E, maxB)
            changeStat(file, 0x012F, maxB)
            changeStat(file, 0x0130, maxB)
            changeStat2(file, 0x0132, 0x0133, maxByte, maxByte2)
            changeStat2(file, 0x0134, 0x0135, maxByte, maxByte2)
            changeStat2(file, 0x0136, 0x0137, maxTwoByte1, maxTwoByte2)
            #GWENNO
            changeStat(file, 0x014E, maxB)
            changeStat(file, 0x014F, maxB)
            changeStat(file, 0x0150, maxB)
            changeStat2(file, 0x0152, 0x0153, maxByte, maxByte2)
            changeStat2(file, 0x0154, 0x0155, maxByte, maxByte2)
            changeStat2(file, 0x0156, 0x0157, maxTwoByte1, maxTwoByte2)
            #JOHN
            changeStat(file, 0x016E, maxB)
            changeStat(file, 0x016F, maxB)
            changeStat(file, 0x0170, maxB)
            changeStat2(file, 0x0172, 0x0173, maxByte, maxByte2)
            changeStat2(file, 0x0174, 0x0175, maxByte, maxByte2)
            changeStat2(file, 0x0176, 0x0177, maxTwoByte1, maxTwoByte2)
            #GORN
            changeStat(file, 0x018E, maxB)
            changeStat(file, 0x018F, maxB)
            changeStat(file, 0x00190, maxB)
            changeStat2(file, 0x0192, 0x0193, maxByte, maxByte2)
            changeStat2(file, 0x0194, 0x0195, maxByte, maxByte2)
            changeStat2(file, 0x0196, 0x0197, maxTwoByte1, maxTwoByte2)
            #MAXWELL
            changeStat(file, 0x01AE, maxB)
            changeStat(file, 0x01AF, maxB)
            changeStat(file, 0x01B0, maxB)
            changeStat2(file, 0x01B2, 0x01B3, maxByte, maxByte2)
            changeStat2(file, 0x01B4, 0x01B5, maxByte, maxByte2)
            changeStat2(file, 0x01B6, 0x01B7, maxTwoByte1, maxTwoByte2)
            #TOSHI
            changeStat(file, 0x01CE, maxB)
            changeStat(file, 0x01CF, maxB)
            changeStat(file, 0x01D0, maxB)
            changeStat2(file, 0x01D2, 0x01D3, maxByte, maxByte2)
            changeStat2(file, 0x01D4, 0x01D5, maxByte, maxByte2)
            changeStat2(file, 0x01D6, 0x01D7, maxTwoByte1, maxTwoByte2)
            #SADUJ
            changeStat(file, 0x01EE, maxB)
            changeStat(file, 0x01EF, maxB)
            changeStat(file, 0x01F0, maxB)
            changeStat2(file, 0x01F2, 0x01F3, maxByte, maxByte2)
            changeStat2(file, 0x01F4, 0x01F5, maxByte, maxByte2)
            changeStat2(file, 0x01F6, 0x01F7, maxTwoByte1, maxTwoByte2)
            print("Main Character and party stats updated!!!\n")

#MENU CHOICE 4 
        #ALLOWS USER TO EDIT VALUES FOR INVENTORY ADDITIONS
        elif (userChoice == "4"):
            print("\nType 'y' or 'n' for all of the questions below, some values may not be updated if game has a max, lower than the amount typed in.\n")
            print("Change amount of keys in your inventory? ")
            editValues(file, 0x0206)
            # Repeat for the rest of the items
            # SKULL KEYS
            print("Change amount of skull keys in your inventory? ")
            editValues(file, 0x020B)
            # GEMS
            print("Change amount of gems in your inventory? ")
            editValues(file, 0x0207)
            # BLACK BADGES
            print("Change amount of black badges in your inventory? ")
            editValues(file, 0x0218)
            # MAGIC CARPETS
            print("Do you want to update that amount of magic carpets in your inventory? ")
            editValues(file, 0x020A)
            # MAGIC AXES
            print("Change amount of magic axes in your inventory? ")
            editValues(file, 0x0240)
            # Output a simple message to the user
            print("Values updated!!!\n")
#MENU CHOICE 5
        elif (userChoice == "5"):
        #SETS KEY AMOUNT TO 100
            changeStat(file, 0x0206, chr(100))
            print("\n100 Keys added to user inventory!!!\n")
#MENU CHOICE 6
        elif (userChoice == "6"):
        #SETS SKULL KEY AMOUNT TO 100
            changeStat(file, 0x020B, chr(100))
            print("\n100 Skull Keys added to user inventory!!!\n")
#MENU CHOICE 7
        elif (userChoice == "7"):
            #SET GEM AMOUNT TO 100
            changeStat(file, 0x0207, chr(100))
            print("\n100 Gems added to user inventory!!!\n")
#MENU CHOICE 8
        elif (userChoice == "8"):
            #GIVES USER 1 BLACK BADGE
            changeStat(file, 0x0218, chr(1))
            print("\n1 Black Badge added to user inventory!!!\n")
#MENU CHOICE 9
        elif (userChoice == "9"):
            #SET MAGIC CARPET TO VALUES TO 2
            changeStat(file, 0x020A, chr(2))
            print("\n2 Magic Carpets added to user inventory!!!\n")
#MENU CHOICE 10
        elif (userChoice == "10"):
            #SET MAGIC AXES TO 10
            changeStat(file, 0x0240, chr(10))
            print("\n10 Magic Axes added to user inventory!!!\n")
#MENU CHOICE 11
        elif (userChoice == "11"):
          print("\n EXAMPLE: C:\\OLDGAMES\\Ultima_5\\Ultima\\SAVED.GAM\n")
          save2 = input("Where is this file located? ")
          save == save2
#CLOSE PROGRAM
        else:
            print("All changes were saved to SAVED.GAM and program will close")
            file.close()
            quit()
main()